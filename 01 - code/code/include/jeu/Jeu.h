#ifndef JEU__H
#define JEU__H

/////////////////////////////////////////////////
// Headers
/////////////////////////////////////////////////
#include <SFML/Graphics.hpp>

#include "Terrain.h"

namespace jeu {



/////////////////////////////////////////////////
/// \brief La classe général du jeu, gère le jeu de manière global.
/// popo
/// autre ligne
/// là aussi.
///
/////////////////////////////////////////////////
class Jeu : public sf::NonCopyable, public sf::Drawable {



/////////////////////////////////////////////////
// Méthodes
/////////////////////////////////////////////////

public:
public:
    /////////////////////////////////////////////////
    /// \brief Démarre une nouvelle partie.
    /// et là onsaute une ligne.
    /// et une autre.
    ///
    /////////////////////////////////////////////////
    void demarrerPartie ();

    /////////////////////////////////////////////////
    /// \brief Quitter la partie en cours (sans sauvegarde).
    ///
    /////////////////////////////////////////////////
    void quitterPartie ();

    /////////////////////////////////////////////////
    /// \brief Charger une partie precedement sauvegarder.
    ///
    /////////////////////////////////////////////////
    void chargerPartie ();

    /////////////////////////////////////////////////
    /// \brief Sauvegarder une partie.
    ///
    /////////////////////////////////////////////////
    void sauvegarderPartie ();

    /////////////////////////////////////////////////
    /// \brief Actualiser les éléments du jeu.
    ///
    /// \param deltaT		 Temps écoulé depuis la dernière actualisation. ( par défaut = 0: Actualise sans tenir compte du temps ecoulé)
    /////////////////////////////////////////////////
    void actualiser (sf::Time deltaT = sf::Time::Zero );

    /////////////////////////////////////////////////
    /// \brief Traitement des évenemnts clavier et souris.
    ///
    /// \param evenement		 l'évenement à traiter.
    /////////////////////////////////////////////////
    void traiterEvenements (sf::Event evenement);

    virtual void draw (sf::RenderTarget& target, sf::RenderStates states) const;



/////////////////////////////////////////////////
// Membres
/////////////////////////////////////////////////
private:
    Terrain m_terrain;    ///< Le terrain de la partie en cours.

}; // fin class Jeu

} // fin namespace jeu

#endif
